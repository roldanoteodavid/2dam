// Generated by Dagger (https://dagger.dev).
package com.example.rest_davidroldan.domain.usecases;

import com.example.rest_davidroldan.data.repositories.CustomerRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DeleteCustomerUseCase_Factory implements Factory<DeleteCustomerUseCase> {
  private final Provider<CustomerRepository> repositoryProvider;

  public DeleteCustomerUseCase_Factory(Provider<CustomerRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public DeleteCustomerUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static DeleteCustomerUseCase_Factory create(
      Provider<CustomerRepository> repositoryProvider) {
    return new DeleteCustomerUseCase_Factory(repositoryProvider);
  }

  public static DeleteCustomerUseCase newInstance(CustomerRepository repository) {
    return new DeleteCustomerUseCase(repository);
  }
}
