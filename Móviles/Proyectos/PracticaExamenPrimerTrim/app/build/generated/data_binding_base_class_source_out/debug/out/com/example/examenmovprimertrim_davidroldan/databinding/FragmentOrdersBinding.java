// Generated by view binder compiler. Do not edit!
package com.example.examenmovprimertrim_davidroldan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.examenmovprimertrim_davidroldan.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOrdersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final RecyclerView rvOrders;

  @NonNull
  public final MaterialToolbar topAppBar;

  @NonNull
  public final TextView tvDob;

  @NonNull
  public final TextView tvFname;

  @NonNull
  public final TextView tvId;

  @NonNull
  public final TextView tvLname;

  @NonNull
  public final TextView tvMail;

  @NonNull
  public final TextView tvPhone;

  private FragmentOrdersBinding(@NonNull ConstraintLayout rootView,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull RecyclerView rvOrders,
      @NonNull MaterialToolbar topAppBar, @NonNull TextView tvDob, @NonNull TextView tvFname,
      @NonNull TextView tvId, @NonNull TextView tvLname, @NonNull TextView tvMail,
      @NonNull TextView tvPhone) {
    this.rootView = rootView;
    this.coordinatorLayout = coordinatorLayout;
    this.rvOrders = rvOrders;
    this.topAppBar = topAppBar;
    this.tvDob = tvDob;
    this.tvFname = tvFname;
    this.tvId = tvId;
    this.tvLname = tvLname;
    this.tvMail = tvMail;
    this.tvPhone = tvPhone;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOrdersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOrdersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_orders, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOrdersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.coordinatorLayout;
      CoordinatorLayout coordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (coordinatorLayout == null) {
        break missingId;
      }

      id = R.id.rvOrders;
      RecyclerView rvOrders = ViewBindings.findChildViewById(rootView, id);
      if (rvOrders == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      id = R.id.tvDob;
      TextView tvDob = ViewBindings.findChildViewById(rootView, id);
      if (tvDob == null) {
        break missingId;
      }

      id = R.id.tvFname;
      TextView tvFname = ViewBindings.findChildViewById(rootView, id);
      if (tvFname == null) {
        break missingId;
      }

      id = R.id.tvId;
      TextView tvId = ViewBindings.findChildViewById(rootView, id);
      if (tvId == null) {
        break missingId;
      }

      id = R.id.tvLname;
      TextView tvLname = ViewBindings.findChildViewById(rootView, id);
      if (tvLname == null) {
        break missingId;
      }

      id = R.id.tvMail;
      TextView tvMail = ViewBindings.findChildViewById(rootView, id);
      if (tvMail == null) {
        break missingId;
      }

      id = R.id.tvPhone;
      TextView tvPhone = ViewBindings.findChildViewById(rootView, id);
      if (tvPhone == null) {
        break missingId;
      }

      return new FragmentOrdersBinding((ConstraintLayout) rootView, coordinatorLayout, rvOrders,
          topAppBar, tvDob, tvFname, tvId, tvLname, tvMail, tvPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
