// Generated by Dagger (https://dagger.dev).
package com.example.examenmovprimertrim_davidroldan.domain.usecases;

import com.example.examenmovprimertrim_davidroldan.data.repositories.JugadoresRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetJugadoresEquipoUseCase_Factory implements Factory<GetJugadoresEquipoUseCase> {
  private final Provider<JugadoresRepository> repositoryProvider;

  public GetJugadoresEquipoUseCase_Factory(Provider<JugadoresRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetJugadoresEquipoUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetJugadoresEquipoUseCase_Factory create(
      Provider<JugadoresRepository> repositoryProvider) {
    return new GetJugadoresEquipoUseCase_Factory(repositoryProvider);
  }

  public static GetJugadoresEquipoUseCase newInstance(JugadoresRepository repository) {
    return new GetJugadoresEquipoUseCase(repository);
  }
}
