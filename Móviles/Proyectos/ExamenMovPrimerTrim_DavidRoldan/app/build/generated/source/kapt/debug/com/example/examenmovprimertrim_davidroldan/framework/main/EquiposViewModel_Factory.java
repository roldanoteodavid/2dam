// Generated by Dagger (https://dagger.dev).
package com.example.examenmovprimertrim_davidroldan.framework.main;

import com.example.examenmovprimertrim_davidroldan.domain.usecases.DeleteEquipoUseCase;
import com.example.examenmovprimertrim_davidroldan.domain.usecases.GetEquiposUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class EquiposViewModel_Factory implements Factory<EquiposViewModel> {
  private final Provider<GetEquiposUseCase> getEquiposUseCaseProvider;

  private final Provider<DeleteEquipoUseCase> deleteEquipoUseCaseProvider;

  public EquiposViewModel_Factory(Provider<GetEquiposUseCase> getEquiposUseCaseProvider,
      Provider<DeleteEquipoUseCase> deleteEquipoUseCaseProvider) {
    this.getEquiposUseCaseProvider = getEquiposUseCaseProvider;
    this.deleteEquipoUseCaseProvider = deleteEquipoUseCaseProvider;
  }

  @Override
  public EquiposViewModel get() {
    return newInstance(getEquiposUseCaseProvider.get(), deleteEquipoUseCaseProvider.get());
  }

  public static EquiposViewModel_Factory create(
      Provider<GetEquiposUseCase> getEquiposUseCaseProvider,
      Provider<DeleteEquipoUseCase> deleteEquipoUseCaseProvider) {
    return new EquiposViewModel_Factory(getEquiposUseCaseProvider, deleteEquipoUseCaseProvider);
  }

  public static EquiposViewModel newInstance(GetEquiposUseCase getEquiposUseCase,
      DeleteEquipoUseCase deleteEquipoUseCase) {
    return new EquiposViewModel(getEquiposUseCase, deleteEquipoUseCase);
  }
}
