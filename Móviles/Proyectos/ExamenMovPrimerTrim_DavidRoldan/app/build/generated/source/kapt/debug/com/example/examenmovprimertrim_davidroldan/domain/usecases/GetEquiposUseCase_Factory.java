// Generated by Dagger (https://dagger.dev).
package com.example.examenmovprimertrim_davidroldan.domain.usecases;

import com.example.examenmovprimertrim_davidroldan.data.repositories.EquiposRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetEquiposUseCase_Factory implements Factory<GetEquiposUseCase> {
  private final Provider<EquiposRepository> repositoryProvider;

  public GetEquiposUseCase_Factory(Provider<EquiposRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetEquiposUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetEquiposUseCase_Factory create(Provider<EquiposRepository> repositoryProvider) {
    return new GetEquiposUseCase_Factory(repositoryProvider);
  }

  public static GetEquiposUseCase newInstance(EquiposRepository repository) {
    return new GetEquiposUseCase(repository);
  }
}
