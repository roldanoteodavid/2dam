// Generated by Dagger (https://dagger.dev).
package com.example.rest_davidroldan.framework.orders;

import com.example.examenmovprimertrim_davidroldan.domain.usecases.DeleteJugadorUseCase;
import com.example.examenmovprimertrim_davidroldan.domain.usecases.GetJugadoresUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class JugadoresViewModel_Factory implements Factory<JugadoresViewModel> {
  private final Provider<GetJugadoresUseCase> getJugadoresUseCaseProvider;

  private final Provider<DeleteJugadorUseCase> deleteJugadorUseCaseProvider;

  public JugadoresViewModel_Factory(Provider<GetJugadoresUseCase> getJugadoresUseCaseProvider,
      Provider<DeleteJugadorUseCase> deleteJugadorUseCaseProvider) {
    this.getJugadoresUseCaseProvider = getJugadoresUseCaseProvider;
    this.deleteJugadorUseCaseProvider = deleteJugadorUseCaseProvider;
  }

  @Override
  public JugadoresViewModel get() {
    return newInstance(getJugadoresUseCaseProvider.get(), deleteJugadorUseCaseProvider.get());
  }

  public static JugadoresViewModel_Factory create(
      Provider<GetJugadoresUseCase> getJugadoresUseCaseProvider,
      Provider<DeleteJugadorUseCase> deleteJugadorUseCaseProvider) {
    return new JugadoresViewModel_Factory(getJugadoresUseCaseProvider, deleteJugadorUseCaseProvider);
  }

  public static JugadoresViewModel newInstance(GetJugadoresUseCase getJugadoresUseCase,
      DeleteJugadorUseCase deleteJugadorUseCase) {
    return new JugadoresViewModel(getJugadoresUseCase, deleteJugadorUseCase);
  }
}
