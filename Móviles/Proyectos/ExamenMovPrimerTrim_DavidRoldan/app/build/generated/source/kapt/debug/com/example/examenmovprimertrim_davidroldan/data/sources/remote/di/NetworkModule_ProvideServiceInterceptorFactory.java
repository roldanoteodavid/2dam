// Generated by Dagger (https://dagger.dev).
package com.example.examenmovprimertrim_davidroldan.data.sources.remote.di;

import com.example.examenmovprimertrim_davidroldan.data.sources.remote.ServiceInterceptor;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkModule_ProvideServiceInterceptorFactory implements Factory<ServiceInterceptor> {
  @Override
  public ServiceInterceptor get() {
    return provideServiceInterceptor();
  }

  public static NetworkModule_ProvideServiceInterceptorFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static ServiceInterceptor provideServiceInterceptor() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideServiceInterceptor());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvideServiceInterceptorFactory INSTANCE = new NetworkModule_ProvideServiceInterceptorFactory();
  }
}
